{"version":3,"sources":["components/helpers/helpers.js","components/storepicker/StorePicker.jsx","components/storeheader/Header.jsx","components/addfish/addFishForm.jsx","components/editfish/EditFish.js","components/login/Login.jsx","base.jsx","components/inventory/StoreInventory.jsx","components/orders/Orders.jsx","sample-fishes.js","components/Fish/Fish.jsx","components/App.js","components/NotFound/NotFound.jsx","components/Routes/Router.jsx","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFish","nameRef","priceRef","statusRef","descRef","imageRef","createFish","Fish","name","price","parseFloat","status","desc","image","addFishes","currentTarget","reset","EditFish","handleChange","console","log","updatedFish","fish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","prototype","PropTypes","func","isRequired","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","StoreInventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","RemoveFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.7157f71e.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from \"../helpers/helpers\";\n\nclass StorePicker extends React.Component {\n    \n    myInput = React.createRef();\n\n    goToStore = event => {\n        // Prevent form from submitting\n        event.preventDefault();\n        // get text from that input\n        const storeName = this.myInput.current.value;\n        // Change the page to /store.whatever-entered\n        this.props.history.push(`/store/${storeName}`);\n    }\n    render() {\n        return (\n            <form className='store-selector' onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                type='text'\n                ref={this.myInput} \n                required placeholder='Store Name' \n                defaultValue={ getFunName() } \n                />\n                <button type='submit'>Visit Store</button>\n            </form>\n        ) \n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Header = ({tagline}) => (\n        <header className='top'>\n            <h1>\n                Catch\n            <span className='ofThe'>\n                <span className='of'>Of</span>  \n                <span className='the'>The</span> \n            </span> \n            Day</h1>\n            <h3 className='tagline'>\n                <span>{tagline}</span>\n            </h3>\n        </header>\n    )\n\nHeader.propTypes = {\n    tagline: propTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass AddFish extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n\n    createFish = event => {\n        event.preventDefault();\n        const Fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFishes(Fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    render() {\n    return (\n        <form className='fish-edit' onSubmit={this.createFish}>\n            <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder='Name' />\n            <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder='Price'/>\n            <select name=\"status\" ref={this.statusRef} >\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n            </select>\n            <textarea name=\"desc\" ref={this.descRef} placeholder='Desc'/>\n            <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder='Image'/>\n            <button type=\"submit\">+ Add Fish</button>\n        </form>\n    );\n}\n}\n\nexport default AddFish","import React from 'react';\n\nclass EditFish extends React.Component {\n    handleChange = (event) => {\n        console.log(event);\n        //update the fish\n        // take a copy of the fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n    render() {\n        return (\n            <div className='fish-edit'>\n                <input \n                type=\"text\" \n                name=\"name\" \n                onChange={this.handleChange} \n                value={this.props.fish.name}\n                />\n                <input \n                type=\"text\" \n                name=\"price\" \n                onChange={this.handleChange}  \n                value={this.props.fish.price} \n                />\n                <select \n                type=\"text\" \n                name=\"status\" \n                onChange={this.handleChange}  \n                value={this.props.fish.status}\n                >\n                <option \n                value='available'>Fresh!\n                </option>\n                <option \n                value='unavailable'>Sold Out!\n                </option>\n                </select>\n                <textarea \n                name=\"desc\" \n                onChange={this.handleChange}  \n                value={this.props.fish.desc}>\n                </textarea>\n                <input \n                type=\"text\" \n                name=\"image\" \n                onChange={this.handleChange} \n                value={this.props.fish.image} \n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        )\n    }\n}\n\nexport default EditFish","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className='Login'>\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className='github' onClick={() => props.authenticate('Github')}>\n            Log in with Github\n        </button>\n        <button className='twitter' onClick={() => props.authenticate('Twitter')}>\n            Log in with Twitter\n        </button>\n        <button className='facebook' onClick={() => props.authenticate('Google')}>\n            Log in with Google\n        </button>\n    </nav>\n);\n\nLogin.prototype = {\n    authenticate: PropTypes.func.isRequired\n};\nexport default Login","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBZcfs5HtjqQYgg8QCaZz1Uf85Hg8xrZgA\",\n    authDomain: \"catch-of-the-day-e99fb.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-e99fb-default-rtdb.firebaseio.com\"\n  });\n\n  const base = Rebase.createClass(firebaseApp.database());\n\n  // this is a named export\n  export { firebaseApp };\n// this is a default export\nexport default base;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFish from '../addfish/addFishForm'\nimport EditFish from '../editfish/EditFish';\nimport Login from '../login/Login';\nimport base, { firebaseApp } from \"../../base\";\nimport firebase from 'firebase';\n\nclass StoreInventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        // Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // claim it if there is no owner\n        if (!store.owner) {\n            //save as our own\n            await base.post(`${this.props.storeId}/owner`,{\n                data: authData.user.uid\n            });\n        }\n        // set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n        console.log(authData)\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging out!');\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out</button>\n        // check if logged in\n        if (!this.state.uid) {\n         return <Login authenticate={this.authenticate} />   \n        }\n        if (this.state.uid !== this.state.owner) {\n            return <div>Sorry you are not the owner</div>\n            {logout}\n        }\n        return (\n            <div className='inventory'>\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFish \n                    key={key} \n                    index={key}\n                    fish={this.props.fishes[key]}\n                    updateFish={this.props.updateFish}\n                    deleteFish={this.props.deleteFish}\n                    />\n                    ))}\n                    <AddFish addFishes={this.props.addFishes}/>\n                    <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        )\n    }\n}\n\nexport default StoreInventory;","import React from 'react';\nimport { formatPrice } from '../helpers/helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\", \n            key,\n            timeout:{ enter: 500, exit: 500 }\n        }\n        // make sure fish is loaded before continuing\n        if (!fish) return null;\n        if(!isAvailable) {\n            return (\n            <CSSTransition {...transitionOptions} >\n            <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n            </CSSTransition> \n            ) \n        }\n        return (\n            <CSSTransition {...transitionOptions} >\n                <li key={key}>\n                <span>\n                <TransitionGroup component=\"span\" className=\"count\">\n                    <CSSTransition \n                    classNames=\"count\" \n                    key={count} \n                    timeout={{ enter: 500, exit: 500 }}>\n                        <span>{count}</span>\n                    </CSSTransition>\n                </TransitionGroup>\n                lbs <span className='fishName'>{fish.name}</span>\n                {formatPrice(count * fish.price)}\n                <button className=\"cross\" onClick={() => this.props.RemoveFromOrder(key)}>&times;</button>\n                </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className='order-wrap'>\n                <h2>Orders</h2>\n                <TransitionGroup component=\"ul\" className='order'>\n                {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className='total'>\n                    <strong>{formatPrice(total)}</strong>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers/helpers';\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }), \n        addToOrder: PropTypes.func,\n    }\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    };\n    render() {\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available';\n        return <li className='menu-fish'>\n        <img src={image} alt={name}/>\n        <h3 className='fish-name'>{name}\n        <span className='price'>{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n        {isAvailable ? 'Add to Order' : 'Sold Out!'}</button>\n        </li>\n    }\n}\n\nexport default Fish","import React from 'react';\nimport Header from '../components/storeheader/Header';\nimport Inventory from '../components/inventory/StoreInventory';\nimport Order from '../components/orders/Orders';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish/Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    };\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate local storage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n    componentDidUpdate() {\n        localStorage.setItem(\n            this.props.match.params.storeId, \n            JSON.stringify(this.state.order));\n    }\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n    addFishes = fish => {\n        // take copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // add our fish to the fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // set new fishes object to new state\n        this.setState({\n            fishes\n        });\n    };\n    loadSampleFishes = () => {\n        this.setState({ fishes:sampleFishes });\n    };\n    addToOrder = key => {\n        // take a copy of state\n        const order = { ...this.state.order };\n        //add to order or update number\n        order[key] = order[key] + 1 || 1;\n        //call setstae to update state object\n        this.setState({ order });\n    }\n    RemoveFromOrder = key => {\n        // take a copy of state\n        const order = { ...this.state.order };\n        //remove from order or update number\n        delete order[key];\n        //call setstae to update state object\n        this.setState({ order });\n    }\n    updateFish = (key, updatedFish) => {\n        //take a copy of the current state\n        const fishes = {...this.state.fishes};\n        // update the state\n        fishes[key] = updatedFish;\n        // set that to state\n        this.setState({ fishes });\n    }\n    deleteFish = (key) => {\n        // take a copy of state\n        const fishes = { ...this.state.fishes };\n        // update the state\n        fishes[key] = null;\n        // update state\n        this.setState({ fishes });\n    }\n    render() {\n        return (\n            <div className='catch-of-the-day'>\n                <div className='menu'>\n                    <Header tagline='Fresh Seafood Market'/>\n                    <ul className='fishes'>\n                        {Object.keys(this.state.fishes).map(key => (\n                        <Fish \n                        key={key} \n                        index={key}\n                        details={this.state.fishes[key]} \n                        addToOrder={this.addToOrder}  \n                        />\n                        ))}\n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} \n                RemoveFromOrder={this.RemoveFromOrder}/>\n                <Inventory \n                updateFish={this.updateFish}\n                addFishes={this.addFishes}\n                deleteFish ={this.deleteFish}\n                loadSampleFishes={this.loadSampleFishes}\n                fishes={this.state.fishes}\n                storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!!</h2>\n    </div>\n)\n\nexport default NotFound","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"../storepicker/StorePicker\";\nimport App from \"../App\"\nimport NotFound from '../NotFound/NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route  component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport \"./css/style.css\";\n\nimport Router from './components/Routes/Router';\n\n\nrender(<Router />,document.querySelector('#main'));"],"sourceRoot":""}